<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.test.mapper.JobEntityMapper">
  <resultMap id="BaseResultMap" type="com.test.pojo.JobEntity">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="job_id" jdbcType="BIGINT" property="jobId" />
    <result column="job_name" jdbcType="VARCHAR" property="jobName" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="company_level" jdbcType="BIT" property="companyLevel" />
    <result column="company_id" jdbcType="BIGINT" property="companyId" />
    <result column="org_type" jdbcType="BIGINT" property="orgType" />
    <result column="org_id" jdbcType="BIGINT" property="orgId" />
    <result column="sort_num" jdbcType="INTEGER" property="sortNum" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="create_user_id" jdbcType="BIGINT" property="createUserId" />
    <result column="create_user_name" jdbcType="VARCHAR" property="createUserName" />
    <result column="update_user_id" jdbcType="BIGINT" property="updateUserId" />
    <result column="update_user_name" jdbcType="VARCHAR" property="updateUserName" />
    <result column="archive" jdbcType="BIT" property="archive" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from job
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.test.pojo.JobEntity">
    insert into job (id, job_id, job_name, 
      description, company_level, company_id, 
      org_type, org_id, sort_num, 
      create_time, update_time, create_user_id, 
      create_user_name, update_user_id, update_user_name, 
      archive)
    values (#{id,jdbcType=BIGINT}, #{jobId,jdbcType=BIGINT}, #{jobName,jdbcType=VARCHAR}, 
      #{description,jdbcType=VARCHAR}, #{companyLevel,jdbcType=BIT}, #{companyId,jdbcType=BIGINT}, 
      #{orgType,jdbcType=BIGINT}, #{orgId,jdbcType=BIGINT}, #{sortNum,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{createUserId,jdbcType=BIGINT}, 
      #{createUserName,jdbcType=VARCHAR}, #{updateUserId,jdbcType=BIGINT}, #{updateUserName,jdbcType=VARCHAR}, 
      #{archive,jdbcType=BIT})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.test.pojo.JobEntity">
    update job
    set job_id = #{jobId,jdbcType=BIGINT},
      job_name = #{jobName,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      company_level = #{companyLevel,jdbcType=BIT},
      company_id = #{companyId,jdbcType=BIGINT},
      org_type = #{orgType,jdbcType=BIGINT},
      org_id = #{orgId,jdbcType=BIGINT},
      sort_num = #{sortNum,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_user_id = #{createUserId,jdbcType=BIGINT},
      create_user_name = #{createUserName,jdbcType=VARCHAR},
      update_user_id = #{updateUserId,jdbcType=BIGINT},
      update_user_name = #{updateUserName,jdbcType=VARCHAR},
      archive = #{archive,jdbcType=BIT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select id, job_id, job_name, description, company_level, company_id, org_type, org_id, 
    sort_num, create_time, update_time, create_user_id, create_user_name, update_user_id, 
    update_user_name, archive
    from job
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, job_id, job_name, description, company_level, company_id, org_type, org_id, 
    sort_num, create_time, update_time, create_user_id, create_user_name, update_user_id, 
    update_user_name, archive
    from job
  </select>
  <resultMap id="BaseResultMap" type="com.test.pojo.JobEntity">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="job_id" jdbcType="BIGINT" property="jobId" />
    <result column="job_name" jdbcType="VARCHAR" property="jobName" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="company_level" jdbcType="BIT" property="companyLevel" />
    <result column="company_id" jdbcType="BIGINT" property="companyId" />
    <result column="org_type" jdbcType="BIGINT" property="orgType" />
    <result column="org_id" jdbcType="BIGINT" property="orgId" />
    <result column="sort_num" jdbcType="INTEGER" property="sortNum" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="create_user_id" jdbcType="BIGINT" property="createUserId" />
    <result column="create_user_name" jdbcType="VARCHAR" property="createUserName" />
    <result column="update_user_id" jdbcType="BIGINT" property="updateUserId" />
    <result column="update_user_name" jdbcType="VARCHAR" property="updateUserName" />
    <result column="archive" jdbcType="BIT" property="archive" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from job
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.test.pojo.JobEntity">
    insert into job (id, job_id, job_name, 
      description, company_level, company_id, 
      org_type, org_id, sort_num, 
      create_time, update_time, create_user_id, 
      create_user_name, update_user_id, update_user_name, 
      archive)
    values (#{id,jdbcType=BIGINT}, #{jobId,jdbcType=BIGINT}, #{jobName,jdbcType=VARCHAR}, 
      #{description,jdbcType=VARCHAR}, #{companyLevel,jdbcType=BIT}, #{companyId,jdbcType=BIGINT}, 
      #{orgType,jdbcType=BIGINT}, #{orgId,jdbcType=BIGINT}, #{sortNum,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{createUserId,jdbcType=BIGINT}, 
      #{createUserName,jdbcType=VARCHAR}, #{updateUserId,jdbcType=BIGINT}, #{updateUserName,jdbcType=VARCHAR}, 
      #{archive,jdbcType=BIT})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.test.pojo.JobEntity">
    update job
    set job_id = #{jobId,jdbcType=BIGINT},
      job_name = #{jobName,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      company_level = #{companyLevel,jdbcType=BIT},
      company_id = #{companyId,jdbcType=BIGINT},
      org_type = #{orgType,jdbcType=BIGINT},
      org_id = #{orgId,jdbcType=BIGINT},
      sort_num = #{sortNum,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_user_id = #{createUserId,jdbcType=BIGINT},
      create_user_name = #{createUserName,jdbcType=VARCHAR},
      update_user_id = #{updateUserId,jdbcType=BIGINT},
      update_user_name = #{updateUserName,jdbcType=VARCHAR},
      archive = #{archive,jdbcType=BIT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select id, job_id, job_name, description, company_level, company_id, org_type, org_id, 
    sort_num, create_time, update_time, create_user_id, create_user_name, update_user_id, 
    update_user_name, archive
    from job
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, job_id, job_name, description, company_level, company_id, org_type, org_id, 
    sort_num, create_time, update_time, create_user_id, create_user_name, update_user_id, 
    update_user_name, archive
    from job
  </select>
</mapper>